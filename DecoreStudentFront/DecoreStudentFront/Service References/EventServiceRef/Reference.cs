//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DecoreStudentFront.EventServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/Decore.Models")]
    [System.SerializableAttribute()]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BasePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxEmployeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxTicketsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MemberPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SaleStopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adress {
            get {
                return this.AdressField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressField, value) != true)) {
                    this.AdressField = value;
                    this.RaisePropertyChanged("Adress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float BasePrice {
            get {
                return this.BasePriceField;
            }
            set {
                if ((this.BasePriceField.Equals(value) != true)) {
                    this.BasePriceField = value;
                    this.RaisePropertyChanged("BasePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventOwner {
            get {
                return this.EventOwnerField;
            }
            set {
                if ((this.EventOwnerField.Equals(value) != true)) {
                    this.EventOwnerField = value;
                    this.RaisePropertyChanged("EventOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventTypeId {
            get {
                return this.EventTypeIdField;
            }
            set {
                if ((this.EventTypeIdField.Equals(value) != true)) {
                    this.EventTypeIdField = value;
                    this.RaisePropertyChanged("EventTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageURL {
            get {
                return this.ImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURLField, value) != true)) {
                    this.ImageURLField = value;
                    this.RaisePropertyChanged("ImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxEmployees {
            get {
                return this.MaxEmployeesField;
            }
            set {
                if ((this.MaxEmployeesField.Equals(value) != true)) {
                    this.MaxEmployeesField = value;
                    this.RaisePropertyChanged("MaxEmployees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxTickets {
            get {
                return this.MaxTicketsField;
            }
            set {
                if ((this.MaxTicketsField.Equals(value) != true)) {
                    this.MaxTicketsField = value;
                    this.RaisePropertyChanged("MaxTickets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MemberPrice {
            get {
                return this.MemberPriceField;
            }
            set {
                if ((this.MemberPriceField.Equals(value) != true)) {
                    this.MemberPriceField = value;
                    this.RaisePropertyChanged("MemberPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SaleStop {
            get {
                return this.SaleStopField;
            }
            set {
                if ((this.SaleStopField.Equals(value) != true)) {
                    this.SaleStopField = value;
                    this.RaisePropertyChanged("SaleStop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SectionId {
            get {
                return this.SectionIdField;
            }
            set {
                if ((this.SectionIdField.Equals(value) != true)) {
                    this.SectionIdField = value;
                    this.RaisePropertyChanged("SectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventType", Namespace="http://schemas.datacontract.org/2004/07/Decore.Models")]
    [System.SerializableAttribute()]
    public partial class EventType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EventServiceRef.IEventService")]
    public interface IEventService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEvents", ReplyAction="http://tempuri.org/IEventService/GetEventsResponse")]
        DecoreStudentFront.EventServiceRef.Event[] GetEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEvents", ReplyAction="http://tempuri.org/IEventService/GetEventsResponse")]
        System.Threading.Tasks.Task<DecoreStudentFront.EventServiceRef.Event[]> GetEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEventById", ReplyAction="http://tempuri.org/IEventService/GetEventByIdResponse")]
        DecoreStudentFront.EventServiceRef.Event GetEventById(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEventById", ReplyAction="http://tempuri.org/IEventService/GetEventByIdResponse")]
        System.Threading.Tasks.Task<DecoreStudentFront.EventServiceRef.Event> GetEventByIdAsync(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/CreateEvent", ReplyAction="http://tempuri.org/IEventService/CreateEventResponse")]
        void CreateEvent(DecoreStudentFront.EventServiceRef.Event eventObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/CreateEvent", ReplyAction="http://tempuri.org/IEventService/CreateEventResponse")]
        System.Threading.Tasks.Task CreateEventAsync(DecoreStudentFront.EventServiceRef.Event eventObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/DeleteEventById", ReplyAction="http://tempuri.org/IEventService/DeleteEventByIdResponse")]
        void DeleteEventById(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/DeleteEventById", ReplyAction="http://tempuri.org/IEventService/DeleteEventByIdResponse")]
        System.Threading.Tasks.Task DeleteEventByIdAsync(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEventsBySectionId", ReplyAction="http://tempuri.org/IEventService/GetEventsBySectionIdResponse")]
        DecoreStudentFront.EventServiceRef.Event[] GetEventsBySectionId(int sectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEventsBySectionId", ReplyAction="http://tempuri.org/IEventService/GetEventsBySectionIdResponse")]
        System.Threading.Tasks.Task<DecoreStudentFront.EventServiceRef.Event[]> GetEventsBySectionIdAsync(int sectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEventTypes", ReplyAction="http://tempuri.org/IEventService/GetEventTypesResponse")]
        DecoreStudentFront.EventServiceRef.EventType[] GetEventTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/GetEventTypes", ReplyAction="http://tempuri.org/IEventService/GetEventTypesResponse")]
        System.Threading.Tasks.Task<DecoreStudentFront.EventServiceRef.EventType[]> GetEventTypesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEventServiceChannel : DecoreStudentFront.EventServiceRef.IEventService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventServiceClient : System.ServiceModel.ClientBase<DecoreStudentFront.EventServiceRef.IEventService>, DecoreStudentFront.EventServiceRef.IEventService {
        
        public EventServiceClient() {
        }
        
        public EventServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EventServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DecoreStudentFront.EventServiceRef.Event[] GetEvents() {
            return base.Channel.GetEvents();
        }
        
        public System.Threading.Tasks.Task<DecoreStudentFront.EventServiceRef.Event[]> GetEventsAsync() {
            return base.Channel.GetEventsAsync();
        }
        
        public DecoreStudentFront.EventServiceRef.Event GetEventById(int eventId) {
            return base.Channel.GetEventById(eventId);
        }
        
        public System.Threading.Tasks.Task<DecoreStudentFront.EventServiceRef.Event> GetEventByIdAsync(int eventId) {
            return base.Channel.GetEventByIdAsync(eventId);
        }
        
        public void CreateEvent(DecoreStudentFront.EventServiceRef.Event eventObject) {
            base.Channel.CreateEvent(eventObject);
        }
        
        public System.Threading.Tasks.Task CreateEventAsync(DecoreStudentFront.EventServiceRef.Event eventObject) {
            return base.Channel.CreateEventAsync(eventObject);
        }
        
        public void DeleteEventById(int eventId) {
            base.Channel.DeleteEventById(eventId);
        }
        
        public System.Threading.Tasks.Task DeleteEventByIdAsync(int eventId) {
            return base.Channel.DeleteEventByIdAsync(eventId);
        }
        
        public DecoreStudentFront.EventServiceRef.Event[] GetEventsBySectionId(int sectionId) {
            return base.Channel.GetEventsBySectionId(sectionId);
        }
        
        public System.Threading.Tasks.Task<DecoreStudentFront.EventServiceRef.Event[]> GetEventsBySectionIdAsync(int sectionId) {
            return base.Channel.GetEventsBySectionIdAsync(sectionId);
        }
        
        public DecoreStudentFront.EventServiceRef.EventType[] GetEventTypes() {
            return base.Channel.GetEventTypes();
        }
        
        public System.Threading.Tasks.Task<DecoreStudentFront.EventServiceRef.EventType[]> GetEventTypesAsync() {
            return base.Channel.GetEventTypesAsync();
        }
    }
}
